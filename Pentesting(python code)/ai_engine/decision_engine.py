# This function takes the domain ('web' or 'network') and a vulnerability finding,
# then returns the appropriate exploit configuration based on the type of finding.
import openai

def decide_exploit(domain, finding):
    # Handle web-related vulnerabilities
    if domain == "web":
        # If the finding is a SQL injection, prepare to run sqlmap
        if finding["type"] == "sqli":
            return {
                "tool": "sqlmap",            # Tool to be used
                "url": finding["url"],       # Target URL
                "param": finding["param"]    # Vulnerable parameter (e.g., 'id')
            }

        # If the finding is an XSS vulnerability, prepare to run the custom XSS payload
        if finding["type"] == "xss":
            return {
                "tool": "xss_payload",       # Tool to use
                "target": finding["url"]     # Target URL where XSS is found
            }

    # Handle network-related vulnerabilities
    if domain == "network":
        # If the finding is related to SMB (e.g., open port 445), prepare to exploit SMB
        if finding["type"] == "smb":
            return {
                "tool": "exploit_smb",             # Tool to use
                "target_ip": finding.get("ip")     # IP address of vulnerable host (if available)
            }

def ask_ai_brain(finding):
    prompt = f"A vulnerability of type {finding['type']} was found at {finding['url']}. What would be the best exploitation method?"
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[{"role": "user", "content": prompt}]
    )
    return response['choices'][0]['message']['content']
